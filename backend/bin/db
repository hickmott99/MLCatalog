#!/bin/bash
#
# Create, destroy, reset or dump SQlite database

# Path to database file
DB_FOLDER=var
DB_FILENAME=var/db.sqlite3

# Stop on errors
set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse command line options
case $1 in
  "create")
    if [ -e ${DB_FOLDER} ]; then
      echo "Error: database already exists"
      exit 1
    fi
    mkdir -p ${DB_FOLDER}
    echo "+ sqlite3 ${DB_FILENAME} < sql/schema.sql"
    sqlite3 ${DB_FILENAME} < sql/schema.sql
    echo "+ sqlite3 ${DB_FILENAME} < sql/data.sql"
    sqlite3 ${DB_FILENAME} < sql/data.sql
    ;;

  "destroy")
    echo "+ rm -rf ${DB_FILENAME} ${DB_FOLDER}"
    rm -rf ${DB_FILENAME} ${DB_FOLDER}
    ;;

  "reset")
    $0 destroy
    $0 create
    ;;

  "dump")
    TABLES=`sqlite3 -batch ${DB_FILENAME} ".tables"`
    for TABLE in ${TABLES}; do
      sqlite3 -echo -batch ${DB_FILENAME} "SELECT * FROM ${TABLE}"
      echo
    done
    ;;
  *)
    usage
    exit 1
    ;;
esac